import { json } from '@sveltejs/kit';
import type { RequestHandler } from './$types';
import { eq } from 'drizzle-orm';
import { db } from '$lib/database/connection';
import { users, type User } from '$lib/database/schema';
import { hashPassword } from '$lib/auth/auth';

export const POST: RequestHandler = async ({ request }) => {
  try {
    const { email, name } = await request.json();

    if (!email) {
      return json({ error: 'Email обязателен' }, { status: 400 });
    }

    // Check if user exists
    const [existingUser] = await db.select().from(users).where(eq(users.email, email));

    if (existingUser) {
      // User exists, return user data
      return json({
        userId: existingUser.id,
        email: existingUser.email,
        name: existingUser.name,
        profilePicture: existingUser.profilePicture,
      });
    }

    // User doesn't exist, create new user
    const defaultName = name || 'Пользователь';
    const autoGeneratedPassword = await hashPassword(`auto-${email}-${Date.now()}`);

    const [newUser] = await db
      .insert(users)
      .values({
        email,
        passwordHash: autoGeneratedPassword,
        name: defaultName,
        role: 'user',
      })
      .returning();

    return json({
      userId: newUser.id,
      email: newUser.email,
      name: newUser.name,
      profilePicture: newUser.profilePicture,
    });
  } catch (error) {
    console.error('Error in mobile auth:', error);
    return json({ error: 'Внутренняя ошибка сервера' }, { status: 500 });
  }
};
